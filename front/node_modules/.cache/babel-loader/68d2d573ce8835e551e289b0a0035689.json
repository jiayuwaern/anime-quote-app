{"ast":null,"code":"var _jsxFileName = \"/Users/salt-dev/Downloads/Demo/frontend/src/components/SearchForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SearchList from './SearchList';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = props => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [quotes, setQuotes] = useState('');\n  const [quote, setQuote] = useState('');\n\n  const fetchQuotes = e => {\n    axios.get('/quotes').then(response => {\n      // setQuotes(response.data);\n      const arr = Array.from(response.data);\n      setQuotes(arr);\n      arr.map(quote => {\n        setQuote({\n          anime: quote.anime,\n          character: quote.character,\n          quote: quote.quote,\n          id: Math.floor(Math.random() * 1000)\n        });\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const inputHandler = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  console.log(quotes.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputHandler,\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Search by name\",\n        value: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchQuotes,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quotes ? quotes.map((listItem, index) => /*#__PURE__*/_jsxDEV(SearchList, {\n        quote: listItem,\n        listId: Math.floor(Math.random() * 1000),\n        listAnime: listItem.anime,\n        listCharacter: listItem.character,\n        listQuote: listItem.quote,\n        favouriteList: props.favouriteList,\n        setFavouriteList: props.setFavouriteList\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"5+gS0ubsgDwVWnr/DkvU9fUQUlc=\");\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/Users/salt-dev/Downloads/Demo/frontend/src/components/SearchForm.js"],"names":["React","useState","SearchList","axios","SearchForm","props","searchQuery","setSearchQuery","quotes","setQuotes","quote","setQuote","fetchQuotes","e","get","then","response","arr","Array","from","data","map","anime","character","id","Math","floor","random","catch","err","console","log","inputHandler","target","value","length","listItem","index","favouriteList","setFavouriteList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,WAAW,GAAGC,CAAC,IAAI;AACvBV,IAAAA,KAAK,CAACW,GAAN,CAAU,SAAV,EAAqBC,IAArB,CAA0BC,QAAQ,IAAI;AACpC;AACA,YAAMC,GAAG,GAAGC,KAAK,CAACC,IAAN,CAAWH,QAAQ,CAACI,IAApB,CAAZ;AACAX,MAAAA,SAAS,CAACQ,GAAD,CAAT;AACAA,MAAAA,GAAG,CAACI,GAAJ,CAAQX,KAAK,IAAI;AACfC,QAAAA,QAAQ,CAAC;AACTW,UAAAA,KAAK,EAAEZ,KAAK,CAACY,KADJ;AAETC,UAAAA,SAAS,EAAEb,KAAK,CAACa,SAFR;AAGTb,UAAAA,KAAK,EAAEA,KAAK,CAACA,KAHJ;AAITc,UAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B;AAJK,SAAD,CAAR;AAMD,OAPD;AAQD,KAZD,EAYGC,KAZH,CAYSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZhB;AAaD,GAdD;;AAgBA,QAAMG,YAAY,GAAGnB,CAAC,IAAI;AACxBN,IAAAA,cAAc,CAACM,CAAC,CAACoB,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAGAJ,EAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAM,CAAC2B,MAAnB;AACA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,QAAQ,EAAEH,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,OAAhD;AAAwD,QAAA,WAAW,EAAC,gBAApE;AAAqF,QAAA,KAAK,EAAE1B;AAA5F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEM,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gBACGJ,MAAM,GAAGA,MAAM,CAACa,GAAP,CAAW,CAACe,QAAD,EAAWC,KAAX,kBACnB,QAAC,UAAD;AAAY,QAAA,KAAK,EAAED,QAAnB;AAAyC,QAAA,MAAM,EAAEX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAjD;AAAmF,QAAA,SAAS,EAAES,QAAQ,CAACd,KAAvG;AAA8G,QAAA,aAAa,EAAEc,QAAQ,CAACb,SAAtI;AAAiJ,QAAA,SAAS,EAAEa,QAAQ,CAAC1B,KAArK;AAA4K,QAAA,aAAa,EAAEL,KAAK,CAACiC,aAAjM;AAAgN,QAAA,gBAAgB,EAAEjC,KAAK,CAACkC;AAAxO,SAAkCF,KAAlC;AAAA;AAAA;AAAA;AAAA,cADQ,CAAH,GAEH;AAHN;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtCD;;GAAMjC,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport SearchList from './SearchList';\nimport axios from 'axios';\n\nconst SearchForm = props => {\n  const [searchQuery,setSearchQuery] = useState('');\n  const [quotes, setQuotes] = useState('');\n  const [quote, setQuote] = useState('');\n\n  const fetchQuotes = e => {\n    axios.get('/quotes').then(response => {\n      // setQuotes(response.data);\n      const arr = Array.from(response.data);\n      setQuotes(arr);\n      arr.map(quote => {\n        setQuote({\n        anime: quote.anime,\n        character: quote.character,\n        quote: quote.quote,\n        id: Math.floor(Math.random() * 1000)\n        })\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const inputHandler = e => {\n    setSearchQuery(e.target.value);\n  };\n  console.log(quotes.length);\n  return (\n    <div>\n      <form>\n        <input onChange={inputHandler} type=\"text\" name=\"title\" placeholder=\"Search by name\" value={searchQuery}/>\n        <button onClick={fetchQuotes}>search</button>\n      </form>\n      <ul>\n        {quotes ? quotes.map((listItem, index) =>\n          <SearchList quote={listItem} key={index} listId={Math.floor(Math.random() * 1000)} listAnime={listItem.anime} listCharacter={listItem.character} listQuote={listItem.quote} favouriteList={props.favouriteList} setFavouriteList={props.setFavouriteList}/>\n        ) : ''}\n      </ul>\n    </div>\n  )\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}