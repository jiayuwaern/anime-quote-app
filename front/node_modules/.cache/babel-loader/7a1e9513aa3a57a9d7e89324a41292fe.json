{"ast":null,"code":"var _jsxFileName = \"/Users/salt-dev/Downloads/Demo/frontend/src/components/SearchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchList = props => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const fetchQuotes = e => {\n    e.preventDefault();\n    axios.get('/quote').then(response => {\n      setQuote({\n        anime: response.data.anime,\n        character: response.data.character,\n        quote: response.data.quote,\n        id: Math.floor(Math.random() * 1000)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const inputHandler = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputHandler,\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Search by name\",\n        value: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchQuotes,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchList, \"t3zU8Ur9zl5L8S/cPsabxjTTqgs=\");\n\n_c = SearchList;\nexport default SearchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["/Users/salt-dev/Downloads/Demo/frontend/src/components/SearchList.js"],"names":["React","useState","axios","SearchList","props","searchQuery","setSearchQuery","fetchQuotes","e","preventDefault","get","then","response","setQuote","anime","data","character","quote","id","Math","floor","random","catch","err","console","log","inputHandler","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMM,WAAW,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnCC,MAAAA,QAAQ,CAAC;AACPC,QAAAA,KAAK,EAAEF,QAAQ,CAACG,IAAT,CAAcD,KADd;AAEPE,QAAAA,SAAS,EAAEJ,QAAQ,CAACG,IAAT,CAAcC,SAFlB;AAGPC,QAAAA,KAAK,EAAEL,QAAQ,CAACG,IAAT,CAAcE,KAHd;AAIPC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B;AAJG,OAAD,CAAR;AAMD,KAPD,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATD;AAUD,GAZD;;AAcA,QAAMG,YAAY,GAAGlB,CAAC,IAAI;AACxBF,IAAAA,cAAc,CAACE,CAAC,CAACmB,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAO,QAAA,QAAQ,EAAEF,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,OAAhD;AAAwD,QAAA,WAAW,EAAC,gBAApE;AAAqF,QAAA,KAAK,EAAErB;AAA5F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7BD;;GAAMJ,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst SearchList = props => {\n  const [searchQuery,setSearchQuery] = useState('');\n\n  const fetchQuotes = e => {\n    e.preventDefault();\n    axios.get('/quote').then(response => {\n      setQuote({\n        anime: response.data.anime,\n        character: response.data.character,\n        quote: response.data.quote,\n        id: Math.floor(Math.random() * 1000)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const inputHandler = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <form>\n        <input onChange={inputHandler} type=\"text\" name=\"title\" placeholder=\"Search by name\" value={searchQuery}/>\n        <button onClick={fetchQuotes}>search</button>\n      </form>\n    </div>\n  )\n}\n\nexport default SearchList;"]},"metadata":{},"sourceType":"module"}