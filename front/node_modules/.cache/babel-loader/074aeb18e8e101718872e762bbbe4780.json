{"ast":null,"code":"var _jsxFileName = \"/Users/salt-dev/Downloads/Demo/frontend/src/components/SearchForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FavouriteItem from './FavouriteItem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = props => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [quotes, setQuotes] = useState('');\n\n  const fetchQuotes = e => {\n    e.preventDefault();\n    axios.get('/quotes').then(response => {\n      console.log(response.data);\n      response.data.map(quote => setQuotes(quote));\n    }).catch(err => console.log(err));\n  };\n\n  console.log(quotes);\n\n  const inputHandler = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputHandler,\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Search by name\",\n        value: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchQuotes,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"GxkN6SQTttjmwA9/zOAuAN1PxHc=\");\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/Users/salt-dev/Downloads/Demo/frontend/src/components/SearchForm.js"],"names":["React","useState","FavouriteItem","axios","SearchForm","props","searchQuery","setSearchQuery","quotes","setQuotes","fetchQuotes","e","preventDefault","get","then","response","console","log","data","map","quote","catch","err","inputHandler","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMS,WAAW,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,SAAV,EAAqBC,IAArB,CAA0BC,QAAQ,IAAI;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAH,MAAAA,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAkBC,KAAK,IAAIX,SAAS,CAACW,KAAD,CAApC;AACD,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAHhB;AAID,GAND;;AAQAN,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;;AAEA,QAAMe,YAAY,GAAGZ,CAAC,IAAI;AACxBJ,IAAAA,cAAc,CAACI,CAAC,CAACa,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,QAAQ,EAAEF,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,OAAhD;AAAwD,QAAA,WAAW,EAAC,gBAApE;AAAqF,QAAA,KAAK,EAAEjB;AAA5F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAjCD;;GAAMN,U;;KAAAA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport FavouriteItem from './FavouriteItem';\nimport axios from 'axios';\n\nconst SearchForm = props => {\n  const [searchQuery,setSearchQuery] = useState('');\n  const [quotes, setQuotes] = useState('');\n\n\n  const fetchQuotes = e => {\n    e.preventDefault();\n    axios.get('/quotes').then(response => {\n      console.log(response.data);\n      response.data.map(quote => setQuotes(quote));\n    }).catch(err => console.log(err));\n  };\n\n  console.log(quotes);\n\n  const inputHandler = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <form>\n        <input onChange={inputHandler} type=\"text\" name=\"title\" placeholder=\"Search by name\" value={searchQuery}/>\n        <button onClick={fetchQuotes}>search</button>\n      </form>\n      <ul>\n        {/* <li>{quotes}</li> */}\n        {/* {quotes ? quotes.map((listItem, index) =>\n          <FavouriteItem  key={index} listId={listItem.id} listAnime={listItem.anime} listCharacter={listItem.character} listQuote={listItem.quote} favouriteList={props.favouriteList} setFavouriteList={props.setFavouriteList}/>\n        ) : ''} */}\n      </ul>\n    </div>\n  )\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}